# -*- coding: utf-8 -*-
"""MultiClass_iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mo7tUlJhsxP73I_teMkUR6O8dl2sIIxq
"""

from keras.optimizer_v2.adam import Adam
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn.datasets import load_iris
from keras.models import Sequential
from keras.layers import Dense 
from keras.optimizers import adam_v2

data = load_iris()

features = data.data
labels = data.target.reshape(-1, 1)

encoder = OneHotEncoder(sparse=False)
target = encoder.fit_transform(labels)

feature_train, feature_test, target_train, target_test = train_test_split(features, target, test_size=0.2)

model = Sequential()
model.add(Dense(10, input_dim=4, activation="relu"))
model.add(Dense(10, input_dim=10, activation="relu"))
model.add(Dense(10, input_dim=10, activation="relu"))
model.add(Dense(3, activation="softmax"))

opt = adam_v2.Adam(learning_rate=0.001)
model.compile(loss="categorical_crossentropy", optimizer=opt, metrics=["accuracy"])

model.fit(feature_train, target_train, batch_size=20, verbose=2, epochs=1000)

result = model.evaluate(feature_test, target_test)
print(result)

a = model.predict([[12, 32, 10, 4]])

print(a.round())